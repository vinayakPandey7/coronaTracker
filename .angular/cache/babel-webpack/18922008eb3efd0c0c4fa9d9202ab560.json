{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ChartService = /*#__PURE__*/(() => {\n  class ChartService {\n    // public options: any = {\n    //   chart: {\n    //     type: 'bar',\n    //     height: 700\n    //   },\n    //   legend: {\n    //     // layout: 'vertical',\n    //     // align: 'right',\n    //     // verticalAlign: 'middle' \n    //   },\n    //   title: {\n    //     text: 'Covid Cases'\n    //   },\n    //   credits: {\n    //     enabled: false\n    //   },\n    //   plotOptions: {\n    //     bar: {\n    //       grouping: false,\n    //     }\n    //   },\n    //   xAxis: {\n    //     type: 'category'\n    //   },\n    //   series:  [{\n    //     name: 'Confirmed',\n    //     color: 'blue',\n    //     data: [{name: 'Confirmed', y: 24916, x: 0}]\n    //   }, {\n    //     name: 'Active',\n    //     color: 'yellow',\n    //     data: [{name: 'Active', y: 11816, x: 1}]\n    //   }, {\n    //     name: 'Recovered',\n    //     color: 'green', \n    //     data: [{name: 'Recovered', y: 34400, x: 2}]\n    //   }, {\n    //     name: 'Death',\n    //     color: 'red', \n    //     data: [{name: 'Death', y: 12908, x: 3}]\n    //   }]\n    // }\n    constructor() {}\n\n    getOption(chartType, dataVal) {\n      if (chartType != 'pie') {\n        let options = {\n          chart: {\n            type: chartType,\n            height: 700\n          },\n          legend: {// layout: 'vertical',\n            // align: 'right',\n            // verticalAlign: 'middle' \n          },\n          title: {\n            text: 'Covid Cases'\n          },\n          credits: {\n            enabled: false\n          },\n          plotOptions: {\n            bar: {\n              grouping: false\n            }\n          },\n          xAxis: {\n            type: 'category'\n          },\n          series: [{\n            name: 'Confirmed',\n            color: 'blue',\n            data: [{\n              name: 'Confirmed',\n              y: dataVal[0],\n              x: 0\n            }]\n          }, {\n            name: 'Active',\n            color: 'yellow',\n            data: [{\n              name: 'Active',\n              y: dataVal[1],\n              x: 1\n            }]\n          }, {\n            name: 'Recovered',\n            color: 'green',\n            data: [{\n              name: 'Recovered',\n              y: dataVal[2],\n              x: 2\n            }]\n          }, {\n            name: 'Death',\n            color: 'red',\n            data: [{\n              name: 'Death',\n              y: dataVal[3],\n              x: 3\n            }]\n          }]\n        };\n        return options;\n      } else {\n        let options = {\n          chart: {\n            type: 'pie',\n            height: 700\n          },\n          legend: {// layout: 'vertical',\n            // align: 'right',\n            // verticalAlign: 'middle' \n          },\n          title: {\n            text: 'Covid Cases'\n          },\n          credits: {\n            enabled: false\n          },\n          plotOptions: {\n            pie: {\n              allowPointSelect: true,\n              cursor: 'pointer',\n              dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n              }\n            }\n          },\n          xAxis: {\n            type: 'category'\n          },\n          series: [{\n            name: 'Brands',\n            colorByPoint: true,\n            data: [{\n              name: 'Confirm',\n              y: dataVal[0],\n              sliced: true,\n              selected: true\n            }, {\n              name: 'Active',\n              y: dataVal[1]\n            }, {\n              name: 'Recovered',\n              y: dataVal[2]\n            }, {\n              name: 'Death',\n              y: dataVal[3]\n            }]\n          }]\n        };\n        return options;\n      }\n    }\n\n  }\n\n  ChartService.ɵfac = function ChartService_Factory(t) {\n    return new (t || ChartService)();\n  };\n\n  ChartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChartService,\n    factory: ChartService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChartService;\n})();","map":null,"metadata":{},"sourceType":"module"}