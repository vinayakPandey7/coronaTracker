{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/chart-service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/list\";\nimport * as i8 from \"../cards/cards.component\";\nimport * as i9 from \"@angular/material/core\";\n\nfunction StatePageComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelement(1, \"app-cards\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"item\", item_r3);\n  }\n}\n\nfunction StatePageComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const food_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", food_r4.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", food_r4.viewValue, \" \");\n  }\n}\n\nfunction StatePageComponent_mat_list_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-option\", 19);\n    i0.ɵɵlistener(\"click\", function StatePageComponent_mat_list_option_20_Template_mat_list_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const dist_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.handleDistClick(dist_r5);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dist_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dist_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dist_r5 == null ? null : dist_r5.distName, \" \");\n  }\n}\n\nvar Highcharts = require('highcharts');\n\nexport let StatePageComponent = /*#__PURE__*/(() => {\n  class StatePageComponent {\n    constructor(route, ChartService) {\n      this.route = route;\n      this.ChartService = ChartService;\n      this.title = \"myHighchart\";\n      this.statekeyfact = [{\n        name: \"totalConfirmed\",\n        label: \"Total\",\n        color: \"#8076a3\",\n        image: \"\",\n        png: \"../assets/images/coronacase.png\",\n        value: 0,\n        source: \"\"\n      }, {\n        name: \"activeCases\",\n        label: \"Active\",\n        color: \"#FFBF00\",\n        image: \"\",\n        png: \"../assets/images/mask.svg\",\n        value: 0,\n        source: \"\"\n      }, {\n        name: \"discharged\",\n        label: \"Cured\",\n        color: \"#98ff98\",\n        image: \"\",\n        png: \"../assets/images/cured.png\",\n        value: 0,\n        source: \"\"\n      }, {\n        name: \"deaths\",\n        label: \"Casualties\",\n        color: \"#ff7f8a\",\n        image: \"\",\n        png: \"../assets/images/death.svg\",\n        value: 0,\n        source: \"\"\n      }];\n      this.foods = [{\n        value: \"column\",\n        viewValue: \"Column\"\n      }, {\n        value: \"bar\",\n        viewValue: \"Bar\"\n      }, {\n        value: \"line\",\n        viewValue: \"Line\"\n      }, {\n        value: \"pie\",\n        viewValue: \"Pie Chart\"\n      }];\n      this.chartData = [];\n      this.isLoading = true;\n    }\n\n    ngOnInit() {\n      this.isLoading = true;\n      this.selectedValue = this.foods[0].value;\n\n      if (localStorage.getItem(\"stateData\") != null) {\n        this.stateData = JSON.parse(localStorage.getItem(\"stateData\") || \"{}\");\n        let confirm = this.stateData.stateStatus[\"stateConfirmed\"],\n            active = this.stateData.stateStatus[\"stateActive\"],\n            recovered = this.stateData.stateStatus[\"statRecovered\"],\n            deaths = this.stateData.stateStatus[\"stateDeceased\"];\n        this.chartData = [confirm, active, recovered, deaths];\n        this.statekeyfact.forEach(itm => {\n          switch (itm.name) {\n            case \"totalConfirmed\":\n              itm.value = confirm;\n              break;\n\n            case \"activeCases\":\n              itm.value = active;\n              break;\n\n            case \"discharged\":\n              itm.value = recovered;\n              break;\n\n            case \"deaths\":\n              itm.value = deaths;\n              break;\n\n            default:\n              break;\n          }\n        }); //  get chart options data\n\n        this.options = this.ChartService.getOption(\"column\", this.chartData);\n        this.drawChart(this.options);\n        Highcharts.chart(\"container\", this.options);\n      } else {\n        this.route.navigate([\"/\"]);\n      }\n    }\n\n    drawChart(options) {\n      Highcharts.chart(\"container\", this.options);\n      this.isLoading = false;\n    }\n\n    changeChart(chartType) {\n      this.options = this.ChartService.getOption(chartType, this.chartData);\n      this.drawChart(this.options);\n    }\n\n    handleDistClick(distData) {\n      localStorage.setItem(\"distData\", JSON.stringify(distData));\n    }\n\n  }\n\n  StatePageComponent.ɵfac = function StatePageComponent_Factory(t) {\n    return new (t || StatePageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ChartService));\n  };\n\n  StatePageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatePageComponent,\n    selectors: [[\"app-state-page\"]],\n    decls: 21,\n    vars: 6,\n    consts: [[1, \"state-container\", 2, \"padding-bottom\", \"10vh\"], [1, \"container-fluid\"], [1, \"row\", \"justify-content-md-center\"], [2, \"text-align\", \"center\", \"margin-top\", \"5vh\", \"margin-bottom\", \"1vh\"], [1, \"h1\", 2, \"font-weight\", \"bolder\"], [\"class\", \"col col-lg-3 col-md-6 col-sm-6\", 4, \"ngFor\", \"ngForOf\"], [2, \"display\", \"flex\", \"justify-content\", \"flex-end\"], [\"aria-label\", \"chart value\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"container\"], [1, \"container\", 2, \"margin-top\", \"5vh\"], [2, \"background-color\", \"gray\"], [2, \"text-align\", \"center\", \"font-weight\", \"bolder\", \"color\", \"white\"], [2, \"justify-content\", \"center\", \"display\", \"flex\"], [\"aria-label\", \"chart value\", \"aria-multiselectable\", \"false\", \"aria-disabled\", \"false\", 2, \"text-align\", \"center\", \"margin-top\", \"-13px\", \"width\", \"50%\", 3, \"multiple\"], [\"style\", \"\\n                background-color: rgb(253, 249, 248);\\n                margin-bottom: 7px;\\n                background-color: white;\\n              \", \"routerLink\", \"/district\", 3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\", \"col-lg-3\", \"col-md-6\", \"col-sm-6\"], [3, \"item\"], [3, \"value\"], [\"routerLink\", \"/district\", 2, \"background-color\", \"rgb(253, 249, 248)\", \"margin-bottom\", \"7px\", \"background-color\", \"white\", 3, \"value\", \"click\"]],\n    template: function StatePageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"p\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, StatePageComponent_div_6_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\");\n        i0.ɵɵelementStart(8, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Select chart Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function StatePageComponent_Template_mat_select_ngModelChange_11_listener($event) {\n          return ctx.selectedValue = $event;\n        })(\"selectionChange\", function StatePageComponent_Template_mat_select_selectionChange_11_listener($event) {\n          return ctx.changeChart($event.value);\n        });\n        i0.ɵɵtemplate(12, StatePageComponent_mat_option_12_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 10);\n        i0.ɵɵelementStart(15, \"div\", 11);\n        i0.ɵɵelementStart(16, \"h3\", 12);\n        i0.ɵɵtext(17, \" District List \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵelementStart(19, \"mat-selection-list\", 14);\n        i0.ɵɵtemplate(20, StatePageComponent_mat_list_option_20_Template, 2, 2, \"mat-list-option\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" State: \", ctx.stateData.stateName, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.statekeyfact);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.foods);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"multiple\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.stateData.district);\n      }\n    },\n    directives: [i3.NgForOf, i4.MatFormField, i4.MatLabel, i5.MatSelect, i6.NgControlStatus, i6.NgModel, i7.MatSelectionList, i8.CardsComponent, i9.MatOption, i7.MatListOption, i1.RouterLink],\n    styles: [\"\"]\n  });\n  return StatePageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}