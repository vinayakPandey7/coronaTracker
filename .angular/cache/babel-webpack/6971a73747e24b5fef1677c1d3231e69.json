{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\n\nclass HighchartsChartComponent {\n  constructor(el, _zone // #75\n  ) {\n    this.el = el;\n    this._zone = _zone;\n    this.updateChange = new EventEmitter(true);\n    this.chartInstance = new EventEmitter(); // #26\n  }\n\n  ngOnChanges(changes) {\n    const update = changes.update && changes.update.currentValue;\n\n    if (changes.options || update) {\n      this.wrappedUpdateOrCreateChart();\n\n      if (update) {\n        this.updateChange.emit(false); // clear the flag after update\n      }\n    }\n  }\n\n  wrappedUpdateOrCreateChart() {\n    if (this.runOutsideAngular) {\n      this._zone.runOutsideAngular(() => {\n        this.updateOrCreateChart();\n      });\n    } else {\n      this.updateOrCreateChart();\n    }\n  }\n\n  updateOrCreateChart() {\n    if (this.chart && this.chart.update) {\n      this.chart.update(this.options, true, this.oneToOne || false);\n    } else {\n      this.chart = this.Highcharts[this.constructorType || 'chart'](this.el.nativeElement, this.options, this.callbackFunction || null); // emit chart instance on init\n\n      this.chartInstance.emit(this.chart);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.chart) {\n      // #56\n      this.chart.destroy();\n      this.chart = null;\n    }\n  }\n\n}\n\nHighchartsChartComponent.ɵfac = function HighchartsChartComponent_Factory(t) {\n  return new (t || HighchartsChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nHighchartsChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HighchartsChartComponent,\n  selectors: [[\"highcharts-chart\"]],\n  inputs: {\n    Highcharts: \"Highcharts\",\n    constructorType: \"constructorType\",\n    callbackFunction: \"callbackFunction\",\n    oneToOne: \"oneToOne\",\n    runOutsideAngular: \"runOutsideAngular\",\n    options: \"options\",\n    update: \"update\"\n  },\n  outputs: {\n    updateChange: \"updateChange\",\n    chartInstance: \"chartInstance\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function HighchartsChartComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighchartsChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'highcharts-chart',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    Highcharts: [{\n      type: Input\n    }],\n    constructorType: [{\n      type: Input\n    }],\n    callbackFunction: [{\n      type: Input\n    }],\n    oneToOne: [{\n      type: Input\n    }],\n    runOutsideAngular: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    update: [{\n      type: Input\n    }],\n    updateChange: [{\n      type: Output\n    }],\n    chartInstance: [{\n      type: Output\n    }]\n  });\n})();\n\nclass HighchartsChartModule {}\n\nHighchartsChartModule.ɵfac = function HighchartsChartModule_Factory(t) {\n  return new (t || HighchartsChartModule)();\n};\n\nHighchartsChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HighchartsChartModule\n});\nHighchartsChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighchartsChartModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [HighchartsChartComponent],\n      exports: [HighchartsChartComponent]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of highcharts-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { HighchartsChartComponent, HighchartsChartModule };","map":{"version":3,"sources":["/home/vinayak/Desktop/Demo/coronaTracker/node_modules/highcharts-angular/fesm2015/highcharts-angular.mjs"],"names":["i0","EventEmitter","Component","Input","Output","NgModule","HighchartsChartComponent","constructor","el","_zone","updateChange","chartInstance","ngOnChanges","changes","update","currentValue","options","wrappedUpdateOrCreateChart","emit","runOutsideAngular","updateOrCreateChart","chart","oneToOne","Highcharts","constructorType","nativeElement","callbackFunction","ngOnDestroy","destroy","ɵfac","ElementRef","NgZone","ɵcmp","type","args","selector","template","HighchartsChartModule","ɵmod","ɵinj","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\n\nclass HighchartsChartComponent {\n    constructor(el, _zone // #75\n    ) {\n        this.el = el;\n        this._zone = _zone;\n        this.updateChange = new EventEmitter(true);\n        this.chartInstance = new EventEmitter(); // #26\n    }\n    ngOnChanges(changes) {\n        const update = changes.update && changes.update.currentValue;\n        if (changes.options || update) {\n            this.wrappedUpdateOrCreateChart();\n            if (update) {\n                this.updateChange.emit(false); // clear the flag after update\n            }\n        }\n    }\n    wrappedUpdateOrCreateChart() {\n        if (this.runOutsideAngular) {\n            this._zone.runOutsideAngular(() => {\n                this.updateOrCreateChart();\n            });\n        }\n        else {\n            this.updateOrCreateChart();\n        }\n    }\n    updateOrCreateChart() {\n        if (this.chart && this.chart.update) {\n            this.chart.update(this.options, true, this.oneToOne || false);\n        }\n        else {\n            this.chart = this.Highcharts[this.constructorType || 'chart'](this.el.nativeElement, this.options, this.callbackFunction || null);\n            // emit chart instance on init\n            this.chartInstance.emit(this.chart);\n        }\n    }\n    ngOnDestroy() {\n        if (this.chart) { // #56\n            this.chart.destroy();\n            this.chart = null;\n        }\n    }\n}\nHighchartsChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nHighchartsChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: HighchartsChartComponent, selector: \"highcharts-chart\", inputs: { Highcharts: \"Highcharts\", constructorType: \"constructorType\", callbackFunction: \"callbackFunction\", oneToOne: \"oneToOne\", runOutsideAngular: \"runOutsideAngular\", options: \"options\", update: \"update\" }, outputs: { updateChange: \"updateChange\", chartInstance: \"chartInstance\" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'highcharts-chart',\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { Highcharts: [{\n                type: Input\n            }], constructorType: [{\n                type: Input\n            }], callbackFunction: [{\n                type: Input\n            }], oneToOne: [{\n                type: Input\n            }], runOutsideAngular: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], update: [{\n                type: Input\n            }], updateChange: [{\n                type: Output\n            }], chartInstance: [{\n                type: Output\n            }] } });\n\nclass HighchartsChartModule {\n}\nHighchartsChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHighchartsChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartModule, declarations: [HighchartsChartComponent], exports: [HighchartsChartComponent] });\nHighchartsChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [HighchartsChartComponent],\n                    exports: [HighchartsChartComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of highcharts-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HighchartsChartComponent, HighchartsChartModule };\n"]},"metadata":{},"sourceType":"module"}